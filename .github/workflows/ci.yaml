# CI

name: CI

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Basic Pipeline
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Define directory from the latest commit
        run: |
          # Define commits and regular expression pattern
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          pattern="^[a-z]+$"
          CI_FLAG=""

          # Check each file
          for file in $CHANGED_FILES; do
            parent_dir=$(dirname "$file")

            if [[ $(basename $file) == "ci.yaml" || $(basename $file) == "run.py" ]]; then
              CI_FLAG=true
              echo "[INFO] The stages will be skipped due to CI_FLAG=true"
              break
            fi

            # Otherwise get USER_DIR
            IFS='/' read -ra components <<< "$parent_dir"
            if [[ "${components[0]}" =~ $pattern ]]; then
              USER_DIR="${components[0]}"
              break
            fi
          done

          # If USER_DIR is empty -> raise an error
          if [[ -z $USER_DIR && -z $CI_FLAG ]]; then
            echo "[ERROR] USER dir can't be null!"
            exit 1
          else
            # export variables to GITHUB environment
            echo "USER_DIR=$USER_DIR" >> $GITHUB_ENV
            echo "CI_FLAG=$CI_FLAG" >> $GITHUB_ENV

            # show variables content
            echo "USER_DIR=$USER_DIR"
            echo "CI_FLAG=$CI_FLAG"
          fi

      - name: Set up Python ${{ matrix.python-version }}
        if: env.CI_FLAG != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        if: env.CI_FLAG != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install vunit_hdl==4.7.0 vsg==3.15.0

      - name: Clone ghdl
        if: env.CI_FLAG != 'true'
        uses: ghdl/setup-ghdl-ci@nightly
        with:
          backend: llvm
      
      # Commented due to the fact of the error
      # ghdl doesn't recognize the libriary properly
      #- name: "ghdl: Syntax checks"
      #  run: |
      #    find "$USER_DIR/" -name '*.vhd' -type f -print0 | xargs -0 -I {} ghdl -s --std=08 -P/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/vunit {} 

      - name: "vhdl-style-guide: Style checks"
        if: env.CI_FLAG != 'true'
        run: |
          find "$USER_DIR/" -name '*.vhd' -type f -print0 | xargs -0 -I {} vsg -f {} || true

      - name: "VUnit: Syntax Check & Module Tests"
        if: env.CI_FLAG != 'true'
        run: |
          python run.py --log-level error $USER_DIR
